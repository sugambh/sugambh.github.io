<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sugam Anand]]></title>
  <link href="http://www.sugamanand.in/atom.xml" rel="self"/>
  <link href="http://www.sugamanand.in/"/>
  <updated>2014-07-19T20:48:46+05:30</updated>
  <id>http://www.sugamanand.in/</id>
  <author>
    <name><![CDATA[Sugam Anand]]></name>
    <email><![CDATA[sugamanandymc1@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Simple Web Server]]></title>
    <link href="http://www.sugamanand.in/blog/2014/07/19/a-simple-web-server-with-python/"/>
    <updated>2014-07-19T18:30:10+05:30</updated>
    <id>http://www.sugamanand.in/blog/2014/07/19/a-simple-web-server-with-python</id>
    <content type="html"><![CDATA[<p>It happens that sometimes you need a web server for testing some application or you just want to share some directory while working on a project and you don&rsquo;t want to configure apache server for such things or apache seems like an overkill. Python comes with a built in HTTP server module. By instantiating the server you can make any directory in your system into web directory.
Navigate to the directory which you want to serve.</p>

<p><strong><strong> In python 2.x </strong></strong>, you can use SimpleHTTPServer module</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -m SimpleHTTPServer [port]</span></code></pre></td></tr></table></div></figure>


<p>if you don&rsquo;t specify any port than server will start at port 8000.</p>

<p><strong><strong>In python 3.x </strong></strong>, this is little simpler to write</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>python -m http.server [port]</span></code></pre></td></tr></table></div></figure>


<p>Note:</p>

<ul>
<li>This can handle only one request at a time and behaves like single threaded. Perhaps, you may want to write a script to make it multithreaded.</li>
<li>It is slow (I hope you got the point of being simple web server)</li>
<li>Sometimes causes timeout errors when loading JavaScript AMD modules using RequireJS.</li>
</ul>


<p>Alternatively you may want to try <a href="https://www.npmjs.org/package/http-server">http-server</a>, a simplest NodeJS server</p>

<p>Installation</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install http-server</span></code></pre></td></tr></table></div></figure>


<p>starting the server</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http-server [path] [options]</span></code></pre></td></tr></table></div></figure>


<p>path : the directory path</p>

<p>and following options can be given</p>

<pre><code>-p The port number to listen on [8080]
-a The host address to bind to [localhost]
-i Display directory index pages [True]
-s or --silent Silent mode won't log to the console
-h or --help Displays help message and exits
</code></pre>

<p><code>http-server</code> can have parallel connections and works like a charm !.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World !]]></title>
    <link href="http://www.sugamanand.in/blog/2014/07/15/first%20post/"/>
    <updated>2014-07-15T00:00:00+05:30</updated>
    <id>http://www.sugamanand.in/blog/2014/07/15/first post</id>
    <content type="html"><![CDATA[<p>   This is my first foray into blogging. I pondered over various blogging platforms like wordpress, tumblr etc. But it was <a href="octopress.org">octopress</a> that won my heart. A perfect blogging engine for geeks. Getting started phase is a little tricky but then onwards using it is a piece of cake. For people worrying about hosting octopress sites, I used github pages for hosting this. If you have a purchased a domain name then you can use it to redirect yourself to your &lsquo;username.github.io&rsquo; by configuring a &lsquo;cname&rsquo; or &lsquo;aname&rsquo; entry with your DNS provider and you can use <a href="www.disqus.com">disqus</a> for adding functionality of comments for your blog. I am still exploring octopress and its plugins. So do expect some changes in the design and layout.</p>

<p>The reason for choosing octopress is that it is based on, <a href="jekyllrb.com">jekyll</a>, a simple, static site generator. I mean, no dynamic pages generation from databases. So sites are faster to load and a simple http server can host Jekyll sites. Security wise, since everything on server just html, javascript and css files so it is more secure also.
I would personally recommend this to everyone who likes to use commandline for doing stuff, even blogging. So what are you waiting for !, try it :)</p>
]]></content>
  </entry>
  
</feed>
